// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
 provider = "prisma-client-js"
 binaryTargets = ["native", "linux-musl-arm64-openssl-1.1.x", "linux-musl-arm64-openssl-3.0.x"]
   
}

datasource db {
 provider = "mysql"
 url      = env("DATABASE_URL")
}




model Users {
 id String @id 
 user_name String @db.VarChar(255)
 icon_url String? @db.Text 
 createdAt DateTime @default(now())
 updatedAt DateTime @updatedAt
 participations Participation[]
}

model Groups {
 id Int @id @default(autoincrement())
 group_name String @db.VarChar(255)
 group_description String? @db.Text
 // ?はオプショナルであり、nullを許可する
 group_icon String? @db.Text 
 createdAt DateTime @default(now())
 updatedAt DateTime @updatedAt
 participations Participation[]
}

model Participation {
 id String @id
 userId String
 groupId Int
 isActive Boolean @default(false)
 createdAt DateTime @default(now())
 updatedAt DateTime? @updatedAt
 user Users @relation(fields: [userId], references: [id])
 group Groups @relation(fields: [groupId], references: [id])
 createdTasks Task[] @relation("TaskCreator")
 assignedTasks Task[] @relation("TaskAssignee")
 @@unique([userId, groupId])
}

model Calendar {
  id Int @id
  date DateTime @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tasks Task[]
}

model Task {
  id              Int @id @default(autoincrement())
  taskTitle       String
  taskDetail      String?
  taskImageUrl    String? @db.Text
  period          DateTime 
  createdUser Participation @relation("TaskCreator", fields: [participationCreatedUserId, participationCreatedGroupId], references: [userId, groupId])
  participationCreatedUserId   String   
  participationCreatedGroupId  Int
  assignee Participation? @relation("TaskAssignee", fields: [participationAssigneeUserId, participationAssigneeGroupId], references: [userId, groupId])      
  participationAssigneeUserId  String?   
  participationAssigneeGroupId Int?  
  calendar Calendar @relation(fields: [calendarId], references: [id])
  calendarId Int
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}